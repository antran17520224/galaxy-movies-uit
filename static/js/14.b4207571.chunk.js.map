{"version":3,"sources":["common/Pages/index.tsx","common/Constant/index.ts","common/index.ts","modules/LoginPage/components/FormForgotPassword/index.tsx","modules/LoginPage/components/FormResetPassword/index.tsx","../node_modules/@material-ui/icons/PhotoCamera.js","assets/images/logo/logo-GM-1.png","modules/LoginPage/components/MyAccount/MyAccountContainer.ts","modules/LoginPage/components/MyAccount/index.tsx"],"names":["URL_CINEMA","YOUR_KEY_APP","DOMAIN_WEB","FormForgotPassword","props","useForm","handleSubmit","register","errors","isToggleModalForgotPassword","store","LoginPage","open","aria-labelledby","id","className","onSubmit","data","email","actions","sentMailForgot","autoFocus","margin","label","type","fullWidth","name","inputRef","required","maxLength","value","message","pattern","style","width","display","justifyContent","marginTop","onClick","toggleModal","MODAL_USER_LOGIN","MODAL_FORGOT_PASSWORD","variant","color","FormResetPassword","watch","React","useState","isShowPass","setShowPass","isShowConfirmPass","setShowConfirmPass","password","useRef","current","isToggleModalResetPassword","confirmPassword","code","resetPassword","newPassword","codeReset","flexDirection","htmlFor","endAdornment","position","aria-label","edge","labelWidth","minLength","validate","MODAL_RESET_PASSWORD","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","Fragment","cx","cy","r","d","withRouter","connect","dispatch","allActions","loginActions","bindActionCreators","userInfo","isProcessing","accessToken","useEffect","window","location","assign","Loading","spinning","text","Grid","container","spacing","item","xs","src","avatarUrl","avatar","alt","accept","onChange","event","changeAvatarUser","target","files","IconButton","component","fullName","phone","address","gender","moment","dateOfBirth","format","Box","textAlign","padding","Link","cursor","fontSize"],"mappings":"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","file":"static/js/14.b4207571.chunk.js","sourcesContent":["import * as React from \"react\"\r\nimport { Result, Button } from \"antd\";\r\n\r\nexport const NotAcceptPage = () => (\r\n    <div\r\n        style={{\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        }}\r\n    >\r\n        <Result\r\n            status=\"403\"\r\n            title=\"Bạn không quyền truy cập trang này\"\r\n            extra={\r\n                <Button\r\n                    type=\"primary\"\r\n                    danger\r\n                    key=\"console\"\r\n                    onClick={() => {\r\n                        localStorage.clear();\r\n                        window.location.reload();\r\n                    }}\r\n                >\r\n                    Đăng xuất\r\n                </Button>\r\n            }\r\n        />\r\n    </div>\r\n);\r\n","export const URL_CINEMA = 'Galaxy Movies';\n\nexport const YOUR_KEY_APP = 'AIzaSyDztP6SDtzPiVhZauiUZMWvQWF1ZCclh7w';\n\nexport const BASENAME_WEB = 'galaxy-movies-uit';\n\nexport const DOMAIN_WEB = `https://antran17520224.github.io/${BASENAME_WEB}`;\n","export * from \"./Interface\";\r\nexport * from \"./Pages\";\r\nexport * from \"./Constant\";\r\nexport * from \"./Theme\";\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { ILogInProps } from \"../../model/ILoginProps\";\r\nimport { MODAL_USER_LOGIN } from \"../../model/ILoginState\";\r\n\r\ninterface IProps extends RouteComponentProps, ILogInProps {}\r\n\r\ninterface IInput {\r\n    email: string;\r\n}\r\n\r\nexport const FormForgotPassword: React.FC<IProps> = props => {\r\n    const { handleSubmit, register, errors } = useForm();\r\n    const onSubmit = (data: IInput) => {\r\n        const { email } = data;\r\n        props.actions.sentMailForgot({ email });\r\n    };\r\n    const { isToggleModalForgotPassword } = props.store.LoginPage;\r\n    return (\r\n        <Dialog\r\n            open={isToggleModalForgotPassword}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Quên mật khẩu</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Vui lòng nhập email để tiến hành reset mật khẩu !\r\n                    <br />\r\n                    Chúng tôi sẽ gửi mã để xác nhận để tiền hành reset mật khẩu !\r\n                </DialogContentText>\r\n                <form className=\"form-dialog\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        inputRef={register({\r\n                            required: \"Email không được bỏ trống\",\r\n                            maxLength: {\r\n                                value: 30,\r\n                                message: \"Email không được quá 30 ký tự\"\r\n                            },\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                message: \"Email không hợp lệ\"\r\n                            }\r\n                        })}\r\n                    />\r\n                    {errors.email && <p>{errors.email.message}</p>}\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-end\",\r\n                            marginTop: \"15px\"\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            onClick={() => {\r\n                                props.actions.toggleModal({\r\n                                    type: MODAL_USER_LOGIN.MODAL_FORGOT_PASSWORD\r\n                                });\r\n                            }}\r\n                            variant=\"contained\"\r\n                            style={{\r\n                                margin: \"0px 13px\"\r\n                            }}\r\n                        >\r\n                            Từ chối\r\n                        </Button>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Đồng ý\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n","import {\r\n    FormControl,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { ILogInProps } from \"../../model/ILoginProps\";\r\nimport { MODAL_USER_LOGIN } from \"../../model/ILoginState\";\r\nimport \"./styles.scss\";\r\ninterface IProps extends RouteComponentProps, ILogInProps {}\r\n\r\ninterface IInput {\r\n    password: string;\r\n    confirmPassword: string;\r\n    code: string;\r\n}\r\n\r\nexport const FormResetPassword: React.FC<IProps> = props => {\r\n    const { handleSubmit, register, errors, watch } = useForm();\r\n    const [isShowPass, setShowPass] = React.useState(false);\r\n    const [isShowConfirmPass, setShowConfirmPass] = React.useState(false);\r\n    const password = React.useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n    const onSubmit = (data: IInput) => {\r\n        const { password, confirmPassword, code } = data;\r\n        props.actions.resetPassword({\r\n            newPassword: password,\r\n            confirmPassword,\r\n            codeReset: code\r\n        });\r\n    };\r\n    const { isToggleModalResetPassword } = props.store.LoginPage;\r\n    return (\r\n        <Dialog\r\n            open={isToggleModalResetPassword}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">Quên mật khẩu</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Vui lòng nhập email để tiến hành reset mật khẩu !\r\n                </DialogContentText>\r\n                <form\r\n                    className=\"form-dialog\"\r\n                    onSubmit={handleSubmit(onSubmit)}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\"\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"code\"\r\n                        label=\"Code\"\r\n                        type=\"code\"\r\n                        fullWidth\r\n                        name=\"code\"\r\n                        variant=\"outlined\"\r\n                        inputRef={register({\r\n                            required: \"Code không được bỏ trống\"\r\n                        })}\r\n                    />\r\n                    {errors.code && <p>{errors.code.message}</p>}\r\n                    <FormControl\r\n                        className=\"w-100\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        <InputLabel htmlFor=\"password\">Mật khẩu</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type={isShowPass ? \"text\" : \"password\"}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={() => setShowPass(!isShowPass)}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {isShowPass ? (\r\n                                            <Visibility />\r\n                                        ) : (\r\n                                            <VisibilityOff />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            labelWidth={70}\r\n                            inputRef={register({\r\n                                required: \"Mật khẩu không được bỏ trống\",\r\n                                maxLength: {\r\n                                    value: 30,\r\n                                    message: \"Mật khẩu không được quá 30 ký tự\"\r\n                                },\r\n                                minLength: {\r\n                                    value: 8,\r\n                                    message: \"Mật khẩu ít nhất 8 ký tự\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])/i,\r\n                                    message:\r\n                                        \"Mật khẩu phải chứa chữ hoa, chữ thường, ký tự đặc biệt và số\"\r\n                                }\r\n                            })}\r\n                        />\r\n                    </FormControl>\r\n                    {errors.password && <p>{errors.password.message}</p>}\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        className=\"w-100\"\r\n                        margin=\"normal\"\r\n                    >\r\n                        <InputLabel htmlFor=\"confirmPassword\">\r\n                            Nhập lại mật khẩu\r\n                        </InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"confirmPassword\"\r\n                            name=\"confirmPassword\"\r\n                            type={isShowConfirmPass ? \"text\" : \"password\"}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={() =>\r\n                                            setShowConfirmPass(\r\n                                                !isShowConfirmPass\r\n                                            )\r\n                                        }\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {isShowConfirmPass ? (\r\n                                            <Visibility />\r\n                                        ) : (\r\n                                            <VisibilityOff />\r\n                                        )}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            labelWidth={70}\r\n                            inputRef={register({\r\n                                required:\r\n                                    \"Xác nhận mật khẩu không được bỏ trống\",\r\n                                validate: value =>\r\n                                    value === password.current ||\r\n                                    \"Mật khẩu nhập lại không chính xác\"\r\n                            })}\r\n                        />\r\n                    </FormControl>\r\n                    {errors.confirmPassword && (\r\n                        <p>{errors.confirmPassword.message}</p>\r\n                    )}\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-end\",\r\n                            marginTop: \"15px\"\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            onClick={() => {\r\n                                props.actions.toggleModal({\r\n                                    type: MODAL_USER_LOGIN.MODAL_RESET_PASSWORD\r\n                                });\r\n                            }}\r\n                            variant=\"contained\"\r\n                            style={{\r\n                                margin: \"0px 13px\"\r\n                            }}\r\n                        >\r\n                            Từ chối\r\n                        </Button>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Đồng ý\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"3.2\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 2L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2H9zm3 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z\"\n})), 'PhotoCamera');\n\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/logo-GM-1.4ea05c2e.png\";","import IStore from \"../../../../redux/store/IStore\";\r\nimport * as loginActions from \"../../actions\";\r\nimport { Dispatch, bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { MyAccount } from \"./index\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction mapStateToProps(store: IStore) {\r\n    return {\r\n        store: store\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch) {\r\n    const allActions = {\r\n        ...loginActions\r\n    };\r\n    return {\r\n        actions: bindActionCreators(allActions, dispatch)\r\n    };\r\n}\r\nexport default withRouter(\r\n\tconnect(mapStateToProps, mapDispatchToProps)(MyAccount)\r\n);\r\n\r\n","import { Box, Grid, IconButton, Link } from '@material-ui/core';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { LoadingCustom } from '../../../../components/Loading';\r\nimport { ILogInProps } from '../../model/ILoginProps';\r\nimport { MODAL_USER_LOGIN } from '../../model/ILoginState';\r\nimport { FormForgotPassword } from '../FormForgotPassword';\r\nimport { FormResetPassword } from '../FormResetPassword';\r\nimport avatar from '../../../../assets/images/logo/logo-GM-1.png';\r\n\r\nimport './account.scss';\r\nimport { DOMAIN_WEB } from '../../../../common';\r\ninterface IProps extends RouteComponentProps, ILogInProps {}\r\n\r\nexport const MyAccount: React.FC<IProps> = (props) => {\r\n\tconst onChooseImage = (event: any) => {\r\n\t\tprops.actions.changeAvatarUser({\r\n\t\t\tavatar: event.target.files[0],\r\n\t\t});\r\n\t};\r\n\r\n\tconst { userInfo, accessToken, isProcessing } = props.store.LoginPage;\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (!userInfo) {\r\n\t\t\twindow.location.assign(DOMAIN_WEB);\r\n\t\t}\r\n\t}, [userInfo]);\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<LoadingCustom spinning={isProcessing} text={'Loading'} />\r\n\t\t\t{userInfo && (\r\n\t\t\t\t<div className=\"wrapper-account-page\">\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tjustifyContent: 'flex-end',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tspacing={4}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<h1>Thông tin tài khoản</h1>\r\n\t\t\t\t\t\t\t<div className=\"wrapper-user-info\">\r\n\t\t\t\t\t\t\t\t<div className=\"wrapper-info\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"box1\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"wrapper-avatar\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserInfo.avatarUrl\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `http://datve.herokuapp.com/images/${userInfo.avatarUrl}`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: avatar\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"wrapper-input\">\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"icon-button-file\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChooseImage}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"icon-button-file\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"upload picture\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<PhotoCamera />\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\tHọ và tên : <span>{userInfo.fullName}</span>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\tSố điện thoại : <span>{userInfo.phone}</span>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\tEmail : <span>{userInfo.email}</span>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\tĐịa chỉ : <span>{userInfo.address}</span>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\tGiới tính :{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{userInfo.gender === 'male'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Nam'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'female'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Nữ'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: 'Khác'}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\tNgày sinh :{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{moment(userInfo.dateOfBirth).format('L')}</span>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"forgot-pass\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: '20px',\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.actions.toggleModal({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: MODAL_USER_LOGIN.MODAL_FORGOT_PASSWORD,\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '17px',\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tQuên mật khẩu\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<FormForgotPassword {...props} />\r\n\t\t\t<FormResetPassword {...props} />\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n"],"sourceRoot":""}